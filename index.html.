<!DOCTYPE html>

<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Jeu de Mines - Ultra Fluide</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background: #121212;
      color: #fff;
      text-align: center;
    }

```
h1 {
  margin-top: 20px;
}

#game {
  display: grid;
  grid-template-columns: repeat(5, 60px);
  gap: 10px;
  justify-content: center;
  margin-top: 20px;
}

.cell {
  width: 60px;
  height: 60px;
  background: #1e1e1e;
  border-radius: 10px;
  font-size: 24px;
  cursor: pointer;
  transition: 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cell.revealed {
  background: #2e2e2e;
  cursor: default;
}

.cell.mine {
  background: #d63031 !important;
}

.cell.diamond {
  background: #00b894 !important;
}

.controls {
  margin-top: 20px;
}

input {
  padding: 10px;
  margin: 5px;
  width: 100px;
}

button {
  padding: 10px 20px;
  margin: 5px;
  background: #0984e3;
  border: none;
  border-radius: 5px;
  color: white;
  font-size: 16px;
  cursor: pointer;
  transition: background 0.2s ease;
}

button:hover {
  background: #74b9ff;
}

#status {
  margin-top: 15px;
  font-size: 18px;
}
```

  </style>
</head>
<body>

<h1>ðŸ’£ Jeu de Mines (Ultra Fluide)</h1>

<div class="controls">
  Solde : <strong id="balance">1000</strong> FCFA<br>
  Mise : <input type="number" id="bet" value="100"><br>
  Mines : <input type="number" id="mineCount" value="5" min="1" max="24"><br>
  <button onclick="startGame()">Lancer</button>
  <button onclick="cashOut()" id="cashoutBtn" disabled>ðŸ’¸ Retirer</button>
</div>

<div id="game"></div>
<div id="status"></div>

<script>
  const game = document.getElementById('game');
  const balanceDisplay = document.getElementById('balance');
  const statusDisplay = document.getElementById('status');
  let grid = [];
  let revealed = [];
  let minePositions = new Set();
  let diamondsFound = 0;
  let multiplier = 1.0;
  let bet = 0;
  let balance = 1000;
  let gameOver = false;

  function startGame() {
    game.innerHTML = '';
    revealed = [];
    minePositions.clear();
    diamondsFound = 0;
    multiplier = 1.0;
    gameOver = false;
    statusDisplay.textContent = '';
    document.getElementById('cashoutBtn').disabled = false;

    bet = parseFloat(document.getElementById('bet').value);
    const mineCount = parseInt(document.getElementById('mineCount').value);

    if (bet > balance || bet <= 0 || mineCount < 1 || mineCount > 24) {
      statusDisplay.textContent = "â›” Mise ou nombre de mines invalide.";
      return;
    }

    balance -= bet;
    balanceDisplay.textContent = balance;

    // GÃ©nÃ©rer mines
    while (minePositions.size < mineCount) {
      minePositions.add(Math.floor(Math.random() * 25));
    }

    for (let i = 0; i < 25; i++) {
      const cell = document.createElement('div');
      cell.classList.add('cell');
      cell.dataset.index = i;
      cell.onclick = () => revealCell(cell);
      game.appendChild(cell);
      revealed.push(false);
    }
  }

  function revealCell(cell) {
    const index = parseInt(cell.dataset.index);
    if (gameOver || revealed[index]) return;

    revealed[index] = true;

    if (minePositions.has(index)) {
      cell.classList.add('revealed', 'mine');
      cell.textContent = 'ðŸ’£';
      statusDisplay.textContent = "ðŸ’¥ Boom ! Tu as perdu " + bet + " FCFA.";
      document.getElementById('cashoutBtn').disabled = true;
      gameOver = true;
      return;
    }

    diamondsFound++;
    multiplier += 0.35;
    cell.classList.add('revealed', 'diamond');
    cell.textContent = 'ðŸ’Ž';
  }

  function cashOut() {
    if (gameOver || diamondsFound === 0) return;
    const gain = (bet * multiplier).toFixed(2);
    balance += parseFloat(gain);
    balanceDisplay.textContent = balance;
    statusDisplay.textContent = `âœ… Tu as gagnÃ© ${gain} FCFA !`;
    document.getElementById('cashoutBtn').disabled = true;
    gameOver = true;
  }
</script>

</body>
</html>
